apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'//we use retrolambda because cant instant run with jack

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "com.tabardel.weather"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        resConfigs("en", "fr")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    compile fileTree(include: ['*.jar'], dir: 'libs')

    //**********************// TEST //**********************//
    def ESPRESSO_VERSION = '2.2.2'
    androidTestCompile("com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}") {
        exclude module: 'support-annotations'
        exclude group: 'com.android.support'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${ESPRESSO_VERSION}") {
        exclude module: 'support-annotations'
        exclude group: 'com.android.support'
    }
    testCompile "junit:junit:4.12"

    //**********************// ANDROID SUPPORT //**********************//
    def ANDROID_SUPPORT_VERSION = '24.2.0'
    compile("com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}",
            "com.android.support:design:${ANDROID_SUPPORT_VERSION}",
            "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_VERSION}",
            "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}",
            "com.android.support:cardview-v7:${ANDROID_SUPPORT_VERSION}")
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'

    //**********************// NETWORK //**********************//
    def RETROFIT_VERSION = '2.1.0'
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"
    compile "com.squareup.okhttp3:logging-interceptor:3.3.0"

    //**********************// IMAGE //**********************//
    //we include both to show how switch implementation in ImageModule with dagger
    compile "com.github.bumptech.glide:glide:3.7.0"
    compile "com.squareup.picasso:picasso:2.5.2"

    //**********************// VIEW BINDS //**********************//
    def BUTTERKNIFE_VERSION = "8.4.0"
    compile "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"

    //**********************// TASKS //**********************//
    compile "io.reactivex:rxandroid:1.2.1"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex:rxjava:1.1.6"

    //**********************// DEPENDENCIES INJECTION //**********************//
    def DAGGER_VERSION = "2.5"
    compile "com.google.dagger:dagger:${DAGGER_VERSION}"
    compile "javax.inject:javax.inject:1"
    provided "javax.annotation:jsr250-api:1.0"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    //**********************// DETECT MEMORY LEAK //**********************//
    def LEAK_CANARY_VERSION = "1.4"
    debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAK_CANARY_VERSION}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"
}
